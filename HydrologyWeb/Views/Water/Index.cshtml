@{
    ViewBag.Title = "География сети по водным объектам";
}

@section Scripts
{
    @Scripts.Render("~/bundles/selectpicker")
}

@section Styles
{
    @Styles.Render("~/Content/selectpicker")
}

@model HydrologyWeb.Models.ViewWater

@if (Model.theSites == null)
{
    <p>
        <h1>Нет станций по данному водному объекту</h1>
    </p>
    return;
}

<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
<!-- Bootstrap -->
<link href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css" rel="stylesheet" media="screen">
<link rel="stylesheet" type="text/css" href="//js.arcgis.com/3.13/esri/css/esri.css">
<link rel="stylesheet" type="text/css" href="http://esri.github.io/bootstrap-map-js/src/css/bootstrapmap.css">
<!-- Step 1. Add CSS for the mapping components -->

<style type="text/css">
    #map {
        display: inline-block;
        height: auto;
        min-height: 800px;
        max-height: 1000px;
    }
</style>

<script type="text/javascript">
    var package_path = "//esri.github.com/bootstrap-map-js/src/js";
    var dojoConfig = {
        packages: [{
            name: "application",
            location: package_path
        }]
    };
</script>
<script src="//js.arcgis.com/3.13compact"></script>

<div id="map"></div>
<script>var dojoConfig = { parseOnLoad: true };</script>
<script src="http://js.arcgis.com/3.7/"></script>
<script>
    //dojo.require("dijit.layout.BorderContainer");
    dojo.require("esri.map");

    var map;

    function init() {
        map = new esri.Map("map", {
            basemap: "osm",
            center: [138.483, 52.067],
            zoom: 5
        });

        dojo.connect(map, "onLoad", function (map) {

            @foreach (var item in Model.theSites)
            {
                if(item.Lat != null && item.Lon != null )
                {
                    <text>
            markers([@item.Lon.ToString().Replace(',', '.'),
                @item.Lat.ToString().Replace(',', '.'),
                '@item.SiteCode.ToString() @item.Name.ToString()']);
            </text>
            }
            }

        });

    }
    function markers(stat) {

        //setup the symbology for the graphics (route line, start and stop points and water location)
        var infoSymbol = new esri.symbol.SimpleMarkerSymbol({
            "color": [0, 0, 0, 0],
            "size": 5,
            "angle": -30,
            "xoffset": 0,
            "yoffset": 0,
            "type": "esriSMS",
            "style": "esriSMSCircle",
            "outline": { "color": [0, 100, 255, 255], "width": 5, "type": "esriSLS", "style": "esriSLSSolid" }
        });
        //add points of interest (water, restroom etc) - add info template describing facilities.
        //var infoTemplate = new esri.InfoTemplate("${w}", "x: ${a}<br />y: ${b}<br />z: ${c}");
        var marker1 = new esri.Graphic({
            "geometry": {
                "x": stat[0], "y": stat[1],
                "spatialReference": { "wkid": 4326 }
            }
        });

        marker1.setSymbol(infoSymbol);
        //marker1..setOutline(new SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID, new Color([255,0,0]), 2));
        //marker1.setInfoTemplate(infoTemplate);

        var marker2 = new esri.Graphic({
            "geometry": {
                "x": stat[0], "y": stat[1],

                "spatialReference": { "wkid": 4326 }
            }
        });
        var s_text = (new esri.symbol.TextSymbol(stat[2]));
        s_text.setOffset(0, 10);
        marker2.setSymbol(s_text);
        map.graphics.add(marker1);
        map.graphics.add(marker2);

        //map.infoWindow.resize(110, 100);
    }

    dojo.ready(init);
</script>




@{
    int index = 0;
}
@foreach (var item in Model.theSites)
{

    <div class="row">

        @if (item.Lat != null && item.Lon != null)
        {


        }
        else
        {

            {
                index++;
            }
            <div class="col-md-1">@index</div>
            <div class="col-md-2">@item.SiteCode</div>
            if (item.SiteCode.ToString() == item.Name)
            {
                <div class="col-md-2">
                    <input type="text" class="form-control" id="Name" placeholder="">
                </div>
            }
            else
            {
                <div class="col-md-2">@item.Name</div>
            }
            <div class="col-md-2">
                <input type="text" class="form-control" id="Lat" placeholder="">
            </div>
            <div class="col-md-2">
                <input type="text" class="form-control" id="Lon" placeholder="">
            </div>
            <div id="sitecode-@(item.SiteCode)" class="col-md-2">
                <input class="btn btn-default save-button" type="button" value="Сохранить">
            </div>
            <div class="col-md-1"></div>
        }


    </div>
}

<br />
<br />
<br />
<br />
<br />
<br />